trigger:
  - main

variables:
  terraformWorkingDir: '$(System.DefaultWorkingDirectory)/parent'
  azureServiceConnection: 'SPN_Bhawesh'

# ============================================
# Stage 1: Terraform Setup, Init & Plan
# ============================================
stages:
  - stage: TerraformBuild
    displayName: "Terraform Install, Init & Plan"
    jobs:
      - job: TerraformJob
        displayName: "Terraform Setup and Planning"
        pool:
          name: bhaweshnew
        steps:
          - task: TerraformInstaller@1
            displayName: "Install Terraform"
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTask@5
            name: TerraformInit
            displayName: "Terraform Init"
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: '$(azureServiceConnection)'
              backendAzureRmOverrideSubscriptionID: '9f199aee-1ad7-464f-bd74-4b88ef990086'
              backendAzureRmResourceGroupName: 'G20_RG'
              workingDirectory: '$(terraformWorkingDir)'
              backendAzureRmStorageAccountName: 'g20stg'
              backendAzureRmContainerName: 'bhawesh-tfstate'
              backendAzureRmKey: 'aks.tfstate'

          - task: TerraformTask@5
            name: TerraformPlan
            displayName: "Terraform Plan"
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(terraformWorkingDir)'
              environmentServiceNameAzureRM: '$(azureServiceConnection)'

# ============================================
# Stage 2: Terraform Security Scan (tfsec)
# ============================================
  - stage: SecurityScan
    displayName: "Terraform Security Scan"
    dependsOn: TerraformBuild
    jobs:
      - job: ScanJob
        displayName: "Run tfsec Scan"
        pool:
          name: bhaweshnew
        steps:
          - task: tfsec@1
            displayName: "Run tfsec Security Scan"
            inputs:
              version: 'v1.26.0'
              dir: '$(terraformWorkingDir)'

# ============================================
# Stage 3: Manual Validation (Server Pool)
# ============================================
  - stage: ManualApproval
    displayName: "Manual Approval Before Apply"
    dependsOn: SecurityScan
    condition: succeeded()
    jobs:
      - job: ApprovalJob
        displayName: "Manual Approval Step"
        pool: server  # âœ… Correct place for server pool
        steps:
          - task: ManualValidation@1
            displayName: "Manual Validation"
            inputs:
              notifyUsers: 'bhawesh.mishra@reewasolutions.com'
              instructions: 'Please review and approve the Terraform Apply step.'
              timeout: '1d'

# ============================================
# Stage 4: Terraform Apply (After Approval)
# ============================================
  - stage: TerraformApply
    displayName: "Terraform Apply Execution"
    dependsOn: ManualApproval
    condition: succeeded()
    jobs:
      - job: ApplyJob
        displayName: "Run Terraform Apply"
        pool:
          name: bhaweshnew
        steps:
          - task: TerraformTask@5
            name: TerraformApply
            displayName: "Terraform Apply"
            inputs:
              provider: 'azurerm'
              command: 'apply'
              commandOptions: '-auto-approve'
              workingDirectory: '$(terraformWorkingDir)'
              environmentServiceNameAzureRM: '$(azureServiceConnection)'
